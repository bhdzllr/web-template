/**
 * ********** Grid **********
 */

@use 'sass:math';

@mixin container {
	max-width: $width-site;
	margin: 0 auto;
	padding: 0;
}

@mixin container--sh {
	padding-right: 1rem;
	padding-left: 1rem;

	@media #{$screen-min-md} {
		padding-right: 2.5rem;
		padding-left: 2.5rem;
	}
}

@mixin container--sv {
	padding-top: 1.5rem;
	padding-bottom: 1.5rem;
}

.container {
	@include container;
}

.container--sh {
	@include container--sh;
}

.container--sv {
	@include container--sv;
}

.grid-container {
	overflow: hidden;
}

.grid {
	display: flex;
	flex-wrap: wrap;
	margin-right: -$grid-gutter;
	margin-left: -$grid-gutter;
	padding: 0;
}

.grid > *,
.grid__element {
	flex: 1 1 0;
	width: 100%;
	margin-right: $grid-gutter;
	margin-bottom: $grid-gutter * 2;
	margin-left: $grid-gutter;
	box-sizing: border-box;
}

.grid--row-reverse {
	flex-direction: row-reverse;
}

.grid--no-gutter {
	margin-right: 0;
	margin-left: 0;
}

.grid--no-gutter > *,
.grid--no-gutter .grid__element {
	margin-right: 0;
	margin-bottom: 0;
	margin-left: 0;
}

@for $i from 1 through $grid-columns {
	.grid--#{$i} > *,
	.grid--#{$i} .grid__element {
		flex: 0 1 auto;
		@if $i > 1 {
			width: calc(#{math.div(100%, $i)} - #{$grid-gutter * 2});
		} @else {
			width: math.div(100%, $i);
		}
	}

	.grid--#{$i}.grid--no-gutter > *,
	.grid--#{$i}.grid--no-gutter .grid__element {
		width: math.div(100%, $i);
	}
}

@media #{$screen-min-sm} {
	@for $i from 1 through $grid-columns {
		.grid--sm-#{$i} > *,
		.grid--sm-#{$i} .grid__element {
			flex: 0 1 auto;
			@if $i > 1 {
				width: calc(#{math.div(100%, $i)} - #{$grid-gutter * 2});
			} @else {
				width: math.div(100%, $i);
			}
		}

		.grid--sm-#{$i}.grid--no-gutter > *,
		.grid--sm-#{$i}.grid--no-gutter .grid__element {
			width: math.div(100%, $i);
		}
	}
}

@media #{$screen-min-md} {
	@for $i from 1 through $grid-columns {
		.grid--md-#{$i} > *,
		.grid--md-#{$i} .grid__element {
			flex: 0 1 auto;
			@if $i > 1 {
				width: calc(#{math.div(100%, $i)} - #{$grid-gutter * 2});
			} @else {
				width: math.div(100%, $i);
			}
		}

		.grid--md-#{$i}.grid--no-gutter > *,
		.grid--md-#{$i}.grid--no-gutter .grid__element {
			width: math.div(100%, $i);
		}
	}
}

@media #{$screen-min-lg} {
	@for $i from 1 through $grid-columns {
		.grid--lg-#{$i} > *,
		.grid--lg-#{$i} .grid__element {
			flex: 0 1 auto;
			@if $i > 1 {
				width: calc(#{math.div(100%, $i)} - #{$grid-gutter * 2});
			} @else {
				width: math.div(100%, $i);
			}
		}

		.grid--lg-#{$i}.grid--no-gutter > *,
		.grid--lg-#{$i}.grid--no-gutter .grid__element {
			width: math.div(100%, $i);
		}
	}
}

@media #{$screen-min-xl} {
	@for $i from 1 through $grid-columns {
		.grid--xl-#{$i} > *,
		.grid--xl-#{$i} .grid__element {
			flex: 0 1 auto;
			@if $i > 1 {
				width: calc(#{math.div(100%, $i)} - #{$grid-gutter * 2});
			} @else {
				width: math.div(100%, $i);
			}
		}

		.grid--xl-#{$i}.grid--no-gutter > *,
		.grid--xl-#{$i}.grid--no-gutter .grid__element {
			width: math.div(100%, $i);
		}
	}
}

.row {
	display: flex;
	flex-wrap: wrap;

	margin-right: -$row-gutter;
	margin-left: -$row-gutter;
}

.row > * {
	width: 100%;
	box-sizing: border-box;

	padding-right: $row-gutter;
	padding-left: $row-gutter;
}

.row--reverse {
	flex-direction:	row-reverse;
}

.row--no-gutter {
	margin-right: 0;
	margin-left: 0;
}

.row--no-gutter > *,
.col-no-gutter {
	padding-right: 0;
	padding-left: 0;
}

@for $i from 1 through $row-columns {
	.col-#{$i} {
		flex: 0 0 math.div(100% * $i, $row-columns);

		max-width: math.div(100% * $i, $row-columns);
		margin-bottom: 0;
	}

	.col-offset-#{$i} {
		margin-left: math.div(100% * $i, $row-columns);
	}
}

@media #{$screen-min-sm} {
	@for $i from 1 through $row-columns {
		.col-sm-#{$i} {
			flex: 0 0 math.div(100% * $i, $row-columns);

			max-width: math.div(100% * $i, $row-columns);
			margin-bottom: 0;
		}

		.col-sm-offset-#{$i} {
			margin-left: math.div(100% * $i, $row-columns);
		}
	}
}

@media #{$screen-min-md} {
	@for $i from 1 through $row-columns {
		.col-md-#{$i} {
			flex: 0 0 math.div(100% * $i, $row-columns);

			max-width: math.div(100% * $i, $row-columns);
			margin-bottom: 0;
		}

		.col-md-offset-#{$i} {
			margin-left: math.div(100% * $i, $row-columns);
		}
	}
}

@media #{$screen-min-lg} {
	@for $i from 1 through $row-columns {
		.col-lg-#{$i} {
			flex: 0 0 math.div(100% * $i, $row-columns);

			max-width: math.div(100% * $i, $row-columns);
			margin-bottom: 0;
		}

		.col-lg-offset-#{$i} {
			margin-left: math.div(100% * $i, $row-columns);
		}
	}
}

@media #{$screen-min-xl} {
	@for $i from 1 through $row-columns {
		.col-xl-#{$i} {
			flex: 0 0 math.div(100% * $i, $row-columns);

			max-width: math.div(100% * $i, $row-columns);;
			margin-bottom: 0;
		}

		.col-xl-offset-#{$i} {
			margin-left: math.div(100% * $i, $row-columns);
		}
	}
}
